import json
import os
import time
import boto3

# athena constant
DATABASE = 'sampledb'
TABLE = 'data'

# S3 constant
S3_OUTPUT = 's3://lly-future-state-arch-poc-dev'
S3_BUCKET = 'lly-future-state-arch-poc-dev'
#output='s3://lly-future-state-arch-poc-dev/FutuureState_POC/Athena/'

# number of retries
RETRY_COUNT = 10

# query constant
COLUMN1 = 'Email'
COLUMN2 = 'originalsource'
COLUMN3 = 'entityid'


def lambda_handler(event, context):
        print(event)
        keyword1 = 'CODS' 
        #event['name1']
        #keyword1 = event.get('queryStringParameters').get('original_source')
        query = "SELECT * FROM %s.%s WHERE originalsource = '%s';" % (DATABASE, TABLE, keyword1)
        print(keyword1)
        print(query)
    
        # athena client
        client = boto3.client('athena')
    
        # Execution
        response = client.start_query_execution(
            QueryString=query,
            QueryExecutionContext={
                'Database': DATABASE
            },
            ResultConfiguration={
                'OutputLocation': S3_OUTPUT,
            }
        )
    
        # get query execution id
        query_execution_id = response['QueryExecutionId']
        print(query_execution_id)
    
        # get execution status
        for i in range(1, 1 + RETRY_COUNT):
    
            # get query execution
            query_status = client.get_query_execution(QueryExecutionId=query_execution_id)
            query_execution_status = query_status['QueryExecution']['Status']['State']
    
            if query_execution_status == 'SUCCEEDED':
                print("STATUS:" + query_execution_status)
                break
    
            if query_execution_status == 'FAILED':
                raise Exception("STATUS:" + query_execution_status)
    
            else:
                print("STATUS:" + query_execution_status)
                time.sleep(i)
        else:
            client.stop_query_execution(QueryExecutionId=query_execution_id)
            raise Exception('TIME OVER')
        app =[]
        # get query results
        result = client.get_query_results(QueryExecutionId=query_execution_id)
        print(result)
        allData =  result['ResultSet']['Rows']
        columnList = []
        outputData = [] 

        if(allData and len(allData) > 1 ):
            columnHeaders = allData[0]['Data'] 

            for column in columnHeaders: 
                columnList.append(column['VarCharValue'])

            i = 0
            for data in allData:
                if i == 0:
                    i = i + 1
                    continue
                else:
                    i = i + 1
                    j = 0 
                    row = {}
                    for singleRow in data['Data']:
                        key = columnList[j]
                        value = ''
                        if 'VarCharValue' in singleRow:
                            value = singleRow['VarCharValue']

                        if(key=='email' or key =='phone'):
                            values =  []
                            if value and len(value) > 0:
                                values = value.split(",")
                            
                            row[key] = values
                            j = j+ 1
                        else:
                            row[key] = str(value)
                            j = j+ 1

                    outputData.append(row)

        return outputData
                 




            
        '''if len(result['ResultSet']['Rows']) >= 2:
            for i in range(len(result['ResultSet']['Rows'])):
                email = result['ResultSet']['Rows'][i]['Data'][i]#['VarCharValue']
                app.append(email)
            return app

        else:
            return None
        
        response = {
                    'statusCode': 200,
                    'headers': {
                        'Access-Control-Allow-Origin': '*',
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Credentials': 'true',
                        'Access-Control-Allow-Headers': '*'
                    },
                    'body': json.dumps({"status":"ok","data":[]})
                }'''
